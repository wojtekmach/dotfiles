#!/usr/bin/env ruby

unless ARGV[0]
	puts "usage: timer <time>"
	exit -1
end

def str_to_time(str)
	case str
	when /(\d+)$/
		mul = 1
	when /(\d+)m$/
		mul = 60
	when /(\d+)h$/
		mul = 3600
	when /(\d+)d$/
		mul = * 3600 * 24
	when /(\d+)w$/
		mul = * 3600 * 24 * 7
	else
		raise ArgumentError, "only m,h,d,w are supported"
	end
	time = $~[1].to_i * mul
end

def time_to_str(time)
	str = ""
	if time < 60
		time.to_s + "s"
	elsif time < 3600
		(time/60).to_s + "m " + (time%60).to_s + "s"
	elsif time < (3600 * 24)
		(time/3600).to_s + "h " + ((time%3600)/60).to_s + "m " + (time%60).to_s + "s"
	else
		(time/3600/24).to_s + "d " + ((time%(3600*24))/3600).to_s + "h " + ((time%3600)/60).to_s + "m " + (time%60).to_s + "s"
	end
end

time = str_to_time(ARGV[0])

begin
	while time > 0
		STDOUT.write("\r"+" "*20)
		STDOUT.write("\r"+time_to_str(time))
		STDOUT.flush()
		sleep 1
		time = time -1
	end
rescue Interrupt
end
STDOUT.write("\r"+" "*20)
STDOUT.write("\r")
