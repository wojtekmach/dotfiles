#!/usr/bin/env ruby

#
# fsize
# Basicaly du -sh <file>
# 'fsize -l' is pretty cool since it shows file size in a loop (you can look at download progress)
#

trap("TERM") { puts ; exit 0 }
trap("INT")  { puts ; exit 0 }

def usage
	puts "usage: fsize [<option>] <file>"
	puts
	puts "Examples:"
	puts "  fsize file.jpg         # show file.jpeg size" 
	puts "  fsize -l ~/bt-download # show progress of downloads"
	exit 0
end

unless ARGV[0]
	usage
end

repeat = false

if ARGV[0] =~ /^-/
	if ARGV[0] == "-l"
		repeat = true
	else
		puts "unrecognized option #{ARGV[0]}"
		exit -1
	end
	if ARGV[1]
		files = ARGV[1..-1]
	else
		usage
	end
else
	files = ARGV
end

lines_num = 0

loop do
	STDOUT.write("\r")
	IO.popen("du -sBM #{files.join(' ')}", 'r') do |f|
		STDOUT.write("\r"+f.readline.chop)
	end
	STDOUT.flush()
	
	break unless repeat
	sleep 1
end

