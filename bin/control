#!/usr/bin/env ruby

modules = %w{ notify audio display brightness gamma }

module Notify
	PATH = "/usr/share/icons/Human/scalable/status/"
	
	class << self
		def send(message,icon=nil)
			if icon
				system("notify-send -i #{Notify::PATH+icon} '#{message}'")
			else
				system("notify-send '#{message}'")
			end
		end
	end
end

module Audio
	class << self	
		def set(value)
			system "amixer sset Master #{value}% > /dev/null"
			Notify.send value, "notification-audio-volume-high.svg"
		end

		def get
			f = IO.popen("amixer sget Master", "r")
			f.read.match(/(\d+)%/)[1].to_i
		end
	end
end

module Gamma
	class << self
		def set(value)
			system("xgamma -gamma #{value}")
		end
	end
end

module Display
	class << self
		def turn_on
		  system "xset dpms force on"
		end

		def turn_off
		  system "xset dpms force off"
		end
	end
end

unless ARGV[0]
	puts "usage: control <module> <command>"
	exit -1
end

case ARGV[0]
when "notify"
	if ARGV[1]
		Notify.send ARGV[1]
	end
when "audio"
	if ARGV[1]
		Audio.set ARGV[1].to_i
	end
when "gamma"
	if ARGV[1]
		Gamma.set ARGV[1].to_i
	end
when "display"
	if ARGV[1]
		Display.send({"on" => :turn_on, "off" => :turn_off}[ARGV[1]])
	end
end
